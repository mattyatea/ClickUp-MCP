---
description: 開発ワークフロー・環境設定・デプロイメント手順
globs: ["**/*"]
alwaysApply: true
---

# 開発ワークフロー

## 📋 必須チェック（コミット前）

```bash
# 1. 型チェック
pnpm type-check

# 2. コードフォーマット
npx prettier --write .

# 3. 全体確認
pnpm build  # 本番ビルド確認
```

## 🚀 開発サーバー

```bash
# メイン開発サーバー（ポート8788）
pnpm dev

# 代替起動
pnpm start
```

## 🔧 環境設定

### 必要なシークレット
```bash
# OAuth認証
npx wrangler secret put CLICKUP_CLIENT_ID
npx wrangler secret put CLICKUP_CLIENT_SECRET

# セキュリティ
npx wrangler secret put COOKIE_ENCRYPTION_KEY
```

### KV/Durable Objects設定
```bash
# KVネームスペース作成
npx wrangler kv:namespace create "OAUTH_KV"

# KV確認
npx wrangler kv:namespace list
```

### 環境変数確認
```bash
# 設定確認
npx wrangler whoami
npx wrangler config list
```

## 📦 デプロイ

### 本番デプロイ
```bash
# 安全なデプロイ手順
pnpm type-check && pnpm build && pnpm deploy

# 強制デプロイ（注意）
pnpm deploy --force
```

### デプロイ後確認
```bash
# ログ確認
npx wrangler logs --tail

# ステータス確認
npx wrangler deployments list
```

## 🐛 デバッグ・ログ

### ログ設定
- **開発環境**: `console.log`使用可能
- **本番環境**: 適切なログレベル設定
- **機密情報**: ログに含めない
- **エラー情報**: 詳細に記録

### デバッグツール
```bash
# リアルタイムログ
npx wrangler logs --tail

# 特定期間のログ
npx wrangler logs --since 2024-01-01

# デバッグモード
npx wrangler dev --local
```

## 📁 プロジェクト構造

```
src/
├── index.ts              # メインエントリーポイント
├── config.ts             # 設定管理
├── types.ts              # 型定義
├── handlers/             # リクエストハンドラー
│   ├── combined-handler.ts
│   ├── oauth-handler.ts
│   └── site-handler.ts
├── tools/                # MCPツール実装
│   ├── auth.ts
│   ├── task.ts
│   └── search.ts
├── api/                  # APIクライアント
│   ├── basic.ts
│   ├── search.ts
│   └── common/
├── auth/                 # 認証関連
│   └── user.ts
└── utils/                # ユーティリティ
    └── formatters.ts
```

## 📝 コミット規約

### コミットメッセージ形式
```
<type>(<scope>): <subject>

<body>

<footer>
```

### タイプ一覧
- **feat**: 新機能追加
- **fix**: バグ修正
- **docs**: ドキュメント更新
- **style**: コードスタイル修正（フォーマット等）
- **refactor**: リファクタリング
- **test**: テスト追加・修正
- **chore**: その他の変更（設定、依存関係等）
- **perf**: パフォーマンス改善
- **ci**: CI/CD関連

### 例
```bash
git commit -m "feat(auth): OAuth認証フロー実装"
git commit -m "fix(api): エラーハンドリング修正"
git commit -m "docs(readme): 環境設定手順追加"
```

## 🔍 品質管理

### 自動チェック
```bash
# 型チェック
pnpm type-check

# フォーマット確認
npx prettier --check .

# 全体ビルド
pnpm build
```

### 手動チェック
- [ ] 全機能のテスト
- [ ] エラーハンドリング確認
- [ ] 認証フロー確認
- [ ] API呼び出し確認

## 🚨 トラブルシューティング

### よくある問題

1. **型エラー**
   ```bash
   pnpm type-check
   # エラーを確認して修正
   ```

2. **認証エラー**
   ```bash
   # シークレット再設定
   npx wrangler secret put CLICKUP_CLIENT_ID
   ```

3. **デプロイエラー**
   ```bash
   # 設定確認
   npx wrangler whoami
   npx wrangler config list
   ```

4. **KVエラー**
   ```bash
   # KV確認
   npx wrangler kv:namespace list
   ```

### エラーログ分析
```bash
# 最新エラー確認
npx wrangler logs --tail | grep ERROR

# 特定時間のエラー
npx wrangler logs --since 1h | grep ERROR
```
